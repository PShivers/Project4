{"version":3,"sources":["util.js","components/UsersList.js","components/SingleUser.js","components/PostsLists.js","components/SinglePost.js","components/Search.js","components/SideBar.js","components/PopularPodcasts.js","components/KanyeQuote.js","components/SinglePodcast.js","App.js","serviceWorker.js","index.js"],"names":["getPosts","axios","get","getSinglePost","id","concat","getUsers","getSingleUser","UsersList","state","users","newUser","handleNewUserChange","event","attributeName","target","name","attributeValue","value","Object","objectSpread","_this","setState","console","log","addNewUser","preventDefault","addNewUserToUserList","post","createUser","then","usersList","data","_this2","this","react_default","a","createElement","className","map","user","linkVar","key","react_router_dom","to","onSubmit","type","placeholder","onChange","Component","SingleUser","posts","comments","updatedUser","handleChange","handleUpdate","put","props","match","params","userId","delete","_this3","photo_url","onClick","handleDelete","title","comment","content","PostsList","newPost","handleNewPostChange","addNewPost","addNewPostToPostList","createPost","postsList","SinglePost","newComment","handleNewCommentChange","addNewComment","addNewCommentToComments","createComment","refresh","author","_this4","_this5","body","handlePostDelete","linkVar2","handleCommentDelete","TopBar","styled","div","_templateObject","SearchBar","_templateObject2","Navigation","_templateObject3","Search","href","Menu","SideBar_templateObject","SideBar","Podcast","PopularPodcasts_templateObject","Podcasts","PopularPodcasts_templateObject2","PopularPodCasts","popularPodcasts","podcasts","podcast","src","image","alt","KanyeQuote","quote","response","SinglePodcast","AppWrapper","App_templateObject","Main","App_templateObject2","Body","App_templateObject3","App","components_Search","components_SideBar","react_router","exact","path","component","PopularPodcasts","components_KanyeQuote","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abdf2b46.chunk.js","sourcesContent":["import axios from 'axios';\n\n//=================\n//== Posts ========\n//=================\n\nexport function getPosts() {\n  return axios.get('/api/v1/posts/');\n}\n\nexport function getSinglePost(id) {\n  return axios.get(`/api/v1/posts/${id}`);\n}\n\nexport function createPost(newPost) {\n  console.log(newPost)\n  return axios.post('/api/v1/posts/', newPost);\n}\n\nexport function updatePost(updatedPost) {\n  console.log(updatedPost)\n  return axios.put(`/api/v1/posts/${updatedPost.id}`, updatedPost);\n}\n\nexport function deletePost(userId) {\n  console.log(userId)\n  return axios.delete(`/api/v1/posts/${userId}`);\n}\n//=================\n//== Users ========\n//=================\n\nexport function getUsers() {\n  return axios.get('/api/v1/users/');\n}\n\nexport function getSingleUser(id) {\n  return axios.get(`/api/v1/users/${id}`);\n}\n\nexport function createUser(newUser) {\n  console.log(newUser)\n  return axios.post('/api/v1/users/', newUser);\n}\n\nexport function updateUser(updatedUser) {\n  console.log(updatedUser)\n  return axios.put(`/api/v1/users/${updatedUser.id}`, updatedUser);\n}\n\nexport function deleteUser(userId) {\n  console.log(userId)\n  return axios.delete(`/api/v1/users/${userId}`);\n}\n\n//=================\n//== Comments =====\n//=================\n\nexport function getPostCommentsById(id) {\n  return axios.get(`/api/v1/users/${id}`);\n}\n\nexport function createComment(newComment) {\n  console.log(newComment)\n  return axios.post('/api/v1/comments/', newComment);\n}\n\nexport function updateComment(updatedComment) {\n  console.log(updatedComment)\n  return axios.put(`/api/v1/comments/${updatedComment.id}`, updatedComment);\n}\n\nexport function deleteComment(userId) {\n  console.log(userId)\n  return axios.delete(`/api/v1/comments/${userId}`);\n}\n//=================\n//== Podcasts =====\n//=================\n\nexport function getPopularPodcasts() {\n  console.log('podcast axios req')\n  return axios.get('/api/v1/podcasts/popular');\n}\n\nexport function getPodcast(id) {\n  console.log(id)\n  return axios.get(`/api/v1/podcasts/${id}`);\n}\n\nexport function getKanyeQuote() {\n  // console.log('kayne quote in util')\n  return axios.get('/api/v1/kanye/');\n}\n\n","import React, { Component } from 'react';\nimport { getUsers, createUser } from '../util';\nimport { Link } from 'react-router-dom';\n\nclass UsersList extends Component {\n  state = {\n    users: [],\n    newUser: {}\n  };\n\n  componentDidMount() {\n    getUsers().then(users => {\n      this.setState({ users: users.data });\n      console.log(users.data);\n    });\n  }\n\n  handleNewUserChange = event => {\n    const attributeName = event.target.name;\n    const attributeValue = event.target.value;\n    const newUser = { ...this.state.newUser };\n    newUser[attributeName] = attributeValue;\n    this.setState({ newUser });\n    console.log(this.state.newUser)\n  };\n\n  addNewUser = event => {\n    event.preventDefault();\n    // console.log(this.state.newUser)\n    this.addNewUserToUserList(this.state.newUser);\n    // this.state.refresh();\n  };\n\n  addNewUserToUserList = newUser => {\n    console.log(newUser)\n    createUser(newUser).then(() => {\n      getUsers().then(usersList => {\n        this.setState({ users: usersList.data });\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Users</h1>\n        <div className=\"listOfPosts\">\n          {this.state.users.map(user => {\n            let linkVar = `/users/${user.id}`;\n            return (\n              <h2>\n                <li key={user.id}>\n                  <Link to={linkVar}>{user.name}</Link>\n                </li>\n              </h2>\n            );\n          })}\n        </div>\n\n        <form onSubmit={this.addNewUser}>\n          <div>\n            <input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={this.handleNewUserChange}\n            />\n            <input\n              name=\"photo_url\"\n              type=\"text\"\n              placeholder=\"Photo URL\"\n              onChange={this.handleNewUserChange}\n            />\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Create New User\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UsersList;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getSingleUser, deleteUser, updateUser } from '../util';\n\nclass SingleUser extends Component {\n  state = {\n    user: {},\n    posts: [],\n    comments: [],\n    updatedUser: {}\n  };\n\n  componentDidMount() {\n    getSingleUser(this.props.match.params.id).then(user => {\n      this.setState({\n        user: user.data,\n        posts: user.data.posts,\n        comments: user.data.comments\n      });\n    });\n  }\n\n  handleDelete(id) {\n    deleteUser(id).then(() => {});\n  }\n\n  handleChange = event => {\n    const attributeName = event.target.name;\n    const attributeValue = event.target.value;\n    const updatedUser = { ...this.state.updatedUser };\n    updatedUser[attributeName] = attributeValue;\n    updatedUser.id = this.state.user.id;\n    this.setState({ updatedUser });\n    console.log(this.state.updatedUser);\n  };\n\n  handleUpdate = event => {\n    event.preventDefault();\n    console.log('update clicked');\n    updateUser(this.state.updatedUser).then(() => {\n      getSingleUser(this.props.match.params.id).then(user => {\n        this.setState({ user: user.data });\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.user.name}</h1>\n\n        <div>Edit User</div>\n        <br />\n        <form onSubmit={this.handleUpdate}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Change Name\"\n            value={this.state.updatedUser.name}\n            onChange={this.handleChange}\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"photo_url\"\n            placeholder=\"Change Photo URL\"\n            value={this.state.updatedUser.photo_url}\n            onChange={this.handleChange}\n          />\n          <br />\n          <br />\n          <input type=\"submit\" value=\"Submit Changes\" />\n        </form>\n\n        <br />\n\n        <Link\n          to=\"../users\"\n          onClick={() => {\n            this.handleDelete(this.props.match.params.id);\n          }}\n        >\n          DELETE User\n        </Link>\n\n        {/* <p>{this.state.user.photo_url}</p> */}\n\n        <h2>User's Favorites</h2>\n\n        <h2>User's Posts</h2>\n\n        <div>\n          {this.state.posts.map(post => {\n            let linkVar = `/posts/${post.id}`;\n            return (\n              <div>\n                <li key={post.id}>\n                  <Link to={linkVar}>{post.title}</Link>\n                </li>\n              </div>\n            );\n          })}\n        </div>\n\n        <h2>User's Comments</h2>\n\n        <div>\n          {this.state.comments.map(comment => {\n            let linkVar = `/posts/${comment.post}`;\n            return (\n              <div>\n                <li key={comment.id}>\n                  <Link to={linkVar}>{comment.content}</Link>\n                </li>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SingleUser;\n","import React, { Component } from 'react';\nimport { getPosts, createPost } from '../util';\nimport { Link } from 'react-router-dom';\n\nclass PostsList extends Component {\n  state = {\n    posts: [],\n    newPost: {}\n  };\n\n  componentDidMount() {\n    getPosts().then(posts => {\n      console.log(posts.data);\n      this.setState({ posts: posts.data });\n    });\n  }\n\n  handleNewPostChange = event => {\n    const attributeName = event.target.name;\n    const attributeValue = event.target.value;\n    const newPost = { ...this.state.newPost };\n    newPost[attributeName] = attributeValue;\n    this.setState({ newPost });\n    console.log(this.state.newPost)\n  };\n\n  addNewPost = event => {\n    event.preventDefault();\n    // console.log(this.state.newPost)\n    this.addNewPostToPostList(this.state.newPost);\n    // this.state.refresh();\n  };\n\n  addNewPostToPostList = newPost => {\n    console.log(newPost)\n    createPost(newPost).then(() => {\n      getPosts().then(postsList => {\n        this.setState({ posts: postsList.data });\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        \n      <form onSubmit={this.addNewPost}>\n          <div>\n            <input\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Title\"\n              onChange={this.handleNewPostChange}\n            />\n            <input\n              name=\"body\"\n              type=\"text\"\n              placeholder=\"Body\"\n              onChange={this.handleNewPostChange}\n            />\n            <input\n              name=\"created_at\"\n              type=\"text\"\n              placeholder=\"created_at\"\n               onChange={this.handleNewPostChange}\n            />\n            <input\n              name=\"author\"\n              type=\"text\"\n              placeholder=\"Author\"\n              onChange={this.handleNewPostChange}\n            />\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Create New Post\" />\n          </div>\n        </form>\n\n        <div className=\"listOfPosts\">\n          {this.state.posts.map(post => {\n            let linkVar = `/posts/${post.id}`;\n            return (\n              <h2>\n                <li key={post.id}>\n                  <Link to={linkVar}>{post.title}</Link>\n                </li>\n              </h2>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostsList;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  getSinglePost,\n  getSingleUser,\n  deletePost,\n  createComment,\n  deleteComment\n} from '../util';\n\nclass SinglePost extends Component {\n  state = {\n    post: {},\n    user: {},\n    comments: [],\n    newComment: {}\n  };\n\n  componentDidMount() {\n    getSinglePost(this.props.match.params.id).then(post => {\n      getSingleUser(post.data.author).then(user => {\n        this.setState({\n          post: post.data,\n          user: user.data,\n          comments: post.data.comments\n        });\n      });\n    });\n  }\n\n  refresh() {\n    getSinglePost(this.props.match.params.id).then(post => {\n      getSingleUser(post.data.author).then(user => {\n        this.setState({\n          post: post.data,\n          user: user.data,\n          comments: post.data.comments\n        });\n      });\n    });\n  }\n\n  handlePostDelete(id) {\n    deletePost(id).then(() => {\n      //redirect to users with refreshed list\n    });\n  }\n\n  handleCommentDelete(id) {\n    console.log(id);\n    deleteComment(id).then(() => {\n      this.refresh();\n    });\n  }\n\n  handleNewCommentChange = event => {\n    const attributeName = event.target.name;\n    const attributeValue = event.target.value;\n    const newComment = { ...this.state.newComment };\n    newComment[attributeName] = attributeValue;\n    newComment.post = this.state.post.id;\n    this.setState({ newComment });\n    console.log(this.state.newComment);\n    // console.log(this.state.posts)\n  };\n\n  addNewComment = event => {\n    event.preventDefault();\n    // console.log(this.state.newUser)\n    this.addNewCommentToComments(this.state.newComment);\n    // this.state.refresh();\n  };\n\n  addNewCommentToComments = newComment => {\n    // console.log(newUser)\n    createComment(newComment).then(() => {\n      this.refresh();\n    });\n  };\n\n  render() {\n    // console.log(this.state.post.comments[0].content)\n    return (\n      <div>\n        <h1>{this.state.post.title}</h1>\n        <h4>By {this.state.user.name}</h4>\n        <p>{this.state.post.body}</p>\n\n        <Link\n          to=\"../posts\"\n          onClick={() => {\n            this.handlePostDelete(this.props.match.params.id);\n          }}\n        >\n          DELETE Post\n        </Link>\n\n        <h2>Comments</h2>\n        \n        <form onSubmit={this.addNewComment}>\n          <div>\n            <input\n              name=\"content\"\n              type=\"text\"\n              placeholder=\"Comment\"\n              onChange={this.handleNewCommentChange}\n            />\n            <br/>\n            <input\n              name=\"created_at\"\n              type=\"text\"\n              placeholder=\"created_at\"\n              onChange={this.handleNewCommentChange}\n            />\n            <br/>\n            <input\n              name=\"author\"\n              type=\"text\"\n              placeholder=\"Author ID\"\n              onChange={this.handleNewCommentChange}\n            />\n            <br/>\n            <input\n              name=\"post\"\n              type=\"hidden\"\n              placeholder=\"post\"\n              value={this.state.post.id}\n              onChange={this.handleNewCommentChange}\n            />\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Add Comment\" />\n          </div>\n        </form>\n\n        <div>\n          {this.state.comments.map(comment => {\n            let linkVar = `/users/${comment.author}`;\n            let linkVar2 = `/posts/${this.state.post.id}`;\n            return (\n              <li key={comment.id}>\n                {comment.content}\n                <div>\n                  - <Link to={linkVar}>{comment.author}</Link>\n                  <div>\n                    <Link\n                      to={linkVar2}\n                      onClick={() => {\n                        this.handleCommentDelete(comment.id);\n                      }}\n                    >\n                      Delete Comment\n                    </Link>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </div>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst TopBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: papayawhip;\n  width: 100vw;\n`;\n\nconst SearchBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: papayawhip;\n`;\n\nconst Navigation = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  background: skyblue;\n  width: 100vw;\n`;\n\nclass Search extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <TopBar>\n          <h1>PcDB</h1>\n\n          <SearchBar>\n            <form>\n              <input type=\"text\" name=\"search\" />\n            </form>\n            <button>Search Podcasts</button>\n          </SearchBar>\n\n          <span className=\"login\">Login</span>\n        </TopBar>\n\n        <Navigation>\n          <a href=\"/podcasts/popular\">Podcasts</a> | <a href=\"/users\">Users</a>{' '}\n          | <a href=\"/posts\">Posts</a>\n        </Navigation>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Menu = styled.div`\n  text-align: center;\n  background: papayawhip;\n  height: 100vh;\n  padding: 2%;\n`;\n\nclass SideBar extends Component {\n  state = {};\n  render() {\n    return <Menu>Hi, I'm a sidebar.</Menu>;\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport { getPopularPodcasts } from '../util';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Podcast = styled.div`\n  margin: 5px; \n`;\n\nconst Podcasts = styled.div`\n  display:flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nclass PopularPodCasts extends Component {\n  state = {\n    popularPodcasts: []\n  };\n\n  componentDidMount() {\n    getPopularPodcasts().then(podcasts => {\n      this.setState({ popularPodcasts: podcasts.data.podcasts });\n      console.log(this.state.popularPodcasts);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Popular PodCasts</h1>\n        <Podcasts>\n          {this.state.popularPodcasts.map(podcast => {\n            let linkVar = `/podcasts/${podcast.id}`;\n            return (\n              <Podcast>\n                <div className=\"podcast\" key={podcast.id}>\n                  <Link to={linkVar}>\n                    <img src={podcast.image} alt=\"new\" />\n                  </Link>\n                </div>\n              </Podcast>\n            );\n          })}\n        </Podcasts>\n      </div>\n    );\n  }\n}\n\nexport default PopularPodCasts;\n","import React, { Component } from 'react';\nimport { getKanyeQuote } from '../util';\n\nclass KanyeQuote extends Component {\n  state = {\n    quote: ''\n  };\n\n  componentDidMount() {\n    getKanyeQuote().then(response => {\n      // console.log(response);\n      this.setState({ quote: response.data.quote });\n      // console.log(this.state.quote);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.quote}</div>\n        <div>- Kanye West</div>\n      </div>\n    );\n  }\n}\n\nexport default KanyeQuote;\n","import React, { Component } from 'react';\nimport { getPodcast } from '../util';\n\nclass SinglePodcast extends Component {\n  state = {\n    podcast: {}\n  };\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    getPodcast(this.props.match.params.id).then(podcast => {\n      this.setState({ podcast: podcast.data });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>hi</div>\n      </div>\n    );\n  }\n}\n\nexport default SinglePodcast;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import './App.css';\nimport styled from 'styled-components';\nimport UsersList from './components/UsersList';\nimport SingleUser from './components/SingleUser';\nimport PostsList from './components/PostsLists';\nimport SinglePost from './components/SinglePost';\nimport Search from './components/Search';\nimport SideBar from './components/SideBar';\nimport PopularPodcasts from './components/PopularPodcasts';\nimport KanyeQuote from './components/KanyeQuote';\nimport SinglePodcast from './components/SinglePodcast';\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 100%;\n`;\n\nconst Body = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <Router>\n        <Search />\n        <Main>\n          <SideBar />\n          <Switch>\n            <Body>\n              <Route\n                exact\n                path=\"/podcasts/popular\"\n                component={PopularPodcasts}\n              />\n              <Route\n                exact\n                path=\"/podcasts/:id\"\n                component={SinglePodcast}\n              />\n              <Route exact path=\"/users\" component={UsersList} />\n              <Route exact path=\"/users/:id\" component={SingleUser} />\n              <Route exact path=\"/posts\" component={PostsList} />\n              <Route exact path=\"/posts/:id\" component={SinglePost} />\n              <Route exact path=\"/kanye\" component={KanyeQuote} />\n            </Body>\n          </Switch>\n        </Main>\n        <KanyeQuote/>\n      </Router>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}